-- MS SQL version of testSQL.sql 
-- create new test tables and keys.

IF OBJECT_ID('dbo.info', 'U') IS NOT NULL
 DROP TABLE dbo.info

IF OBJECT_ID('dbo.clinical_event_data', 'U') IS NOT NULL
 DROP TABLE dbo.clinical_event_data

IF OBJECT_ID('dbo.clinical_event', 'U') IS NOT NULL
 DROP TABLE dbo.clinical_event

IF OBJECT_ID('dbo.pdb_uniprot_residue_mapping', 'U') IS NOT NULL
 DROP TABLE dbo.pdb_uniprot_residue_mapping

IF OBJECT_ID('dbo.pdb_uniprot_alignment', 'U') IS NOT NULL
 DROP TABLE dbo.pdb_uniprot_alignment

IF OBJECT_ID('dbo.cosmic_mutation', 'U') IS NOT NULL
 DROP TABLE dbo.cosmic_mutation

IF OBJECT_ID('dbo.copy_number_seg_file', 'U') IS NOT NULL
 DROP TABLE dbo.copy_number_seg_file

IF OBJECT_ID('dbo.copy_number_seg', 'U') IS NOT NULL
 DROP TABLE dbo.copy_number_seg

IF OBJECT_ID('dbo.sample_cna_event', 'U') IS NOT NULL
 DROP TABLE dbo.sample_cna_event

IF OBJECT_ID('dbo.cna_event', 'U') IS NOT NULL
 DROP TABLE dbo.cna_event

IF OBJECT_ID('dbo.drug_interaction', 'U') IS NOT NULL
 DROP TABLE dbo.drug_interaction

IF OBJECT_ID('dbo.drug', 'U') IS NOT NULL
 DROP TABLE dbo.drug

IF OBJECT_ID('dbo.pfam_graphics', 'U') IS NOT NULL
 DROP TABLE dbo.pfam_graphics

IF OBJECT_ID('dbo.text_cache', 'U') IS NOT NULL
 DROP TABLE dbo.text_cache

IF OBJECT_ID('dbo.gistic_to_gene', 'U') IS NOT NULL
 DROP TABLE dbo.gistic_to_gene

IF OBJECT_ID('dbo.gistic', 'U') IS NOT NULL
 DROP TABLE dbo.gistic

IF OBJECT_ID('dbo.sanger_cancer_census', 'U') IS NOT NULL
 DROP TABLE dbo.sanger_cancer_census

IF OBJECT_ID('dbo.protein_array_cancer_study', 'U') IS NOT NULL
 DROP TABLE dbo.protein_array_cancer_study

IF OBJECT_ID('dbo.protein_array_data', 'U') IS NOT NULL
 DROP TABLE dbo.protein_array_data

IF OBJECT_ID('dbo.protein_array_target', 'U') IS NOT NULL
 DROP TABLE dbo.protein_array_target

IF OBJECT_ID('dbo.protein_array_info', 'U') IS NOT NULL
 DROP TABLE dbo.protein_array_info

IF OBJECT_ID('dbo.mut_sig', 'U') IS NOT NULL
 DROP TABLE dbo.mut_sig

IF OBJECT_ID('dbo.interaction', 'U') IS NOT NULL
 DROP TABLE dbo.interaction

IF OBJECT_ID('dbo.clinical_attribute_meta', 'U') IS NOT NULL
 DROP TABLE dbo.clinical_attribute_meta

IF OBJECT_ID('dbo.clinical_sample', 'U') IS NOT NULL
 DROP TABLE dbo.clinical_sample

IF OBJECT_ID('dbo.clinical_patient', 'U') IS NOT NULL
 DROP TABLE dbo.clinical_patient

IF OBJECT_ID('dbo.mutation_count', 'U') IS NOT NULL
 DROP TABLE dbo.mutation_count

IF OBJECT_ID('dbo.mutation', 'U') IS NOT NULL
 DROP TABLE dbo.mutation

IF OBJECT_ID('dbo.mutation_event', 'U') IS NOT NULL
 DROP TABLE dbo.mutation_event

IF OBJECT_ID('dbo.structural_variant', 'U') IS NOT NULL
 DROP TABLE dbo.structural_variant

IF OBJECT_ID('dbo.sample_profile', 'U') IS NOT NULL
 DROP TABLE dbo.sample_profile

IF OBJECT_ID('dbo.gene_panel_list', 'U') IS NOT NULL
 DROP TABLE dbo.gene_panel_list

IF OBJECT_ID('dbo.gene_panel', 'U') IS NOT NULL
 DROP TABLE dbo.gene_panel

IF OBJECT_ID('dbo.genetic_profile_samples', 'U') IS NOT NULL
 DROP TABLE dbo.genetic_profile_samples

IF OBJECT_ID('dbo.genetic_alteration', 'U') IS NOT NULL
 DROP TABLE dbo.genetic_alteration

IF OBJECT_ID('dbo.genetic_profile', 'U') IS NOT NULL
 DROP TABLE dbo.genetic_profile

IF OBJECT_ID('dbo.uniprot_id_mapping', 'U') IS NOT NULL
 DROP TABLE dbo.uniprot_id_mapping

IF OBJECT_ID('dbo.gene_alias', 'U') IS NOT NULL
 DROP TABLE dbo.gene_alias

IF OBJECT_ID('dbo.gene', 'U') IS NOT NULL
 DROP TABLE dbo.gene

IF OBJECT_ID('dbo.sample_list_list', 'U') IS NOT NULL
 DROP TABLE dbo.sample_list_list

IF OBJECT_ID('dbo.sample_list', 'U') IS NOT NULL
 DROP TABLE dbo.sample_list

IF OBJECT_ID('dbo.sample', 'U') IS NOT NULL
 DROP TABLE dbo.sample

IF OBJECT_ID('dbo.patient', 'U') IS NOT NULL
 DROP TABLE dbo.patient

IF OBJECT_ID('dbo.authorities', 'U') IS NOT NULL
 DROP TABLE dbo.authorities

IF OBJECT_ID('dbo.users', 'U') IS NOT NULL
 DROP TABLE dbo.users

IF OBJECT_ID('dbo.cancer_study', 'U') IS NOT NULL
 DROP TABLE dbo.cancer_study

IF OBJECT_ID('dbo.type_of_cancer', 'U') IS NOT NULL
 DROP TABLE dbo.type_of_cancer





CREATE TABLE [type_of_cancer] (
   [TYPE_OF_CANCER_ID] VARCHAR(63) NOT NULL
,  [NAME] VARCHAR(255) NOT NULL
,  [CLINICAL_TRIAL_KEYWORDS] VARCHAR(1024) NOT NULL
,  [DEDICATED_COLOR] CHAR(31) NOT NULL
,  [SHORT_NAME] VARCHAR(127)
,  [PARENT] VARCHAR(63)
)

CREATE TABLE [cancer_study] (
   [CANCER_STUDY_ID] INTEGER NOT NULL IDENTITY(1,1)
,  [CANCER_STUDY_IDENTIFIER] VARCHAR(255)
,  [TYPE_OF_CANCER_ID] VARCHAR(63) NOT NULL
,  [NAME] VARCHAR(255) NOT NULL
,  [SHORT_NAME] VARCHAR(64) NOT NULL
,  [DESCRIPTION] VARCHAR(1024) NOT NULL
,  [PUBLIC] BIT NOT NULL
,  [PMID] VARCHAR(20) DEFAULT NULL
,  [CITATION] VARCHAR(200) DEFAULT NULL
,  [GROUPS] VARCHAR(200) DEFAULT NULL
,  [STATUS] INTEGER DEFAULT NULL
,  [IMPORT_DATE] DATETIME DEFAULT NULL
)

CREATE TABLE [users] (
   [EMAIL] VARCHAR(128) NOT NULL
,  [NAME] VARCHAR(255) NOT NULL
,  [ENABLED] BIT NOT NULL
)

CREATE TABLE [authorities] (
   [EMAIL] VARCHAR(128) NOT NULL
,  [AUTHORITY] VARCHAR(255) NOT NULL
)

CREATE TABLE [patient] (
   [INTERNAL_ID] INTEGER NOT NULL IDENTITY(1,1)
,  [STABLE_ID] VARCHAR(50) NOT NULL
,  [CANCER_STUDY_ID] INTEGER NOT NULL
)

CREATE TABLE [sample] (
   [INTERNAL_ID] INTEGER NOT NULL IDENTITY(1,1)
,  [STABLE_ID] VARCHAR(50) NOT NULL
,  [SAMPLE_TYPE] VARCHAR(255) NOT NULL
,  [PATIENT_ID] INTEGER NOT NULL
,  [TYPE_OF_CANCER_ID] VARCHAR(63) NOT NULL
)

CREATE TABLE [sample_list] (
   [LIST_ID] INTEGER NOT NULL IDENTITY(1,1)
,  [STABLE_ID] VARCHAR(255) NOT NULL
,  [CATEGORY] VARCHAR(255) NOT NULL
,  [CANCER_STUDY_ID] INTEGER NOT NULL
,  [NAME] VARCHAR(255) NOT NULL
,  [DESCRIPTION] TEXT
)

CREATE TABLE [sample_list_list] (
   [LIST_ID] INTEGER NOT NULL
,  [SAMPLE_ID] INTEGER NOT NULL
)

CREATE TABLE [gene] (
   [ENTREZ_GENE_ID] INTEGER NOT NULL
,  [HUGO_GENE_SYMBOL] VARCHAR(255) NOT NULL
,  [TYPE] VARCHAR(50)
,  [CYTOBAND] VARCHAR(50)
,  [LENGTH] INTEGER
)

CREATE TABLE [gene_alias] (
   [ENTREZ_GENE_ID] INTEGER NOT NULL
,  [GENE_ALIAS] VARCHAR(255) NOT NULL
)

CREATE TABLE [uniprot_id_mapping] (
   [UNIPROT_ACC] VARCHAR(255) NOT NULL
,  [UNIPROT_ID] VARCHAR(255) NOT NULL
,  [ENTREZ_GENE_ID] INTEGER NOT NULL
)

CREATE TABLE [genetic_profile] (
   [GENETIC_PROFILE_ID] INTEGER NOT NULL IDENTITY(1,1)
,  [STABLE_ID] VARCHAR(255) NOT NULL
,  [CANCER_STUDY_ID] INTEGER NOT NULL
,  [GENETIC_ALTERATION_TYPE] VARCHAR(255) NOT NULL
,  [DATATYPE] VARCHAR(255) NOT NULL
,  [NAME] VARCHAR(255) NOT NULL
,  [DESCRIPTION] TEXT
,  [SHOW_PROFILE_IN_ANALYSIS_TAB] BINARY(1) NOT NULL
)

CREATE TABLE [genetic_alteration] (
   [GENETIC_PROFILE_ID] INTEGER NOT NULL
,  [ENTREZ_GENE_ID] INTEGER NOT NULL
,  [VALUES] TEXT NOT NULL
)

CREATE TABLE [genetic_profile_samples] (
   [GENETIC_PROFILE_ID] INTEGER NOT NULL
,  [ORDERED_SAMPLE_LIST] TEXT NOT NULL
)

CREATE TABLE [gene_panel] (
   [INTERNAL_ID] INTEGER NOT NULL IDENTITY(1,1)
,  [STABLE_ID] VARCHAR(255) NOT NULL
,  [DESCRIPTION] TEXT
)

CREATE TABLE [gene_panel_list] (
   [INTERNAL_ID] INTEGER NOT NULL
,  [GENE_ID] INTEGER NOT NULL
)

CREATE TABLE [sample_profile] (
   [SAMPLE_ID] INTEGER NOT NULL
,  [GENETIC_PROFILE_ID] INTEGER NOT NULL
,  [PANEL_ID] INTEGER DEFAULT NULL
)

CREATE TABLE [structural_variant] (
   [SAMPLE_ID] INTEGER NOT NULL
,  [INTERNAL_ID] INTEGER NOT NULL IDENTITY(1,1)
,  [BREAKPOINT_TYPE] VARCHAR(25)
,  [ANNOTATION] VARCHAR(255)
,  [COMMENTS] VARCHAR(2048)
,  [CONFIDENCE_CLASS] VARCHAR(25)
,  [CONNECTION_TYPE] VARCHAR(25)
,  [EVENT_INFO] VARCHAR(255)
,  [MAPQ] INTEGER
,  [NORMAL_READ_COUNT] INTEGER
,  [NORMAL_VARIANT_COUNT] INTEGER
,  [PAIRED_END_READ_SUPPORT] VARCHAR(255)
,  [SITE1_CHROM] VARCHAR(25)
,  [SITE1_DESC] VARCHAR(255)
,  [SITE1_ENTREZ_GENE_ID] INTEGER
,  [SITE1_POS] INTEGER
,  [SITE2_CHROM] VARCHAR(25)
,  [SITE2_DESC] VARCHAR(255)
,  [SITE2_ENTREZ_GENE_ID] INTEGER
,  [SITE2_POS] INTEGER
,  [SPLIT_READ_SUPPORT] VARCHAR(255)
,  [SV_CLASS_NAME] VARCHAR(25)
,  [SV_DESC] VARCHAR(255)
,  [SV_LENGTH] INTEGER
,  [TUMOR_READ_COUNT] INTEGER
,  [TUMOR_VARIANT_COUNT] INTEGER
,  [VARIANT_STATUS_NAME] VARCHAR(255)
,  [GENETIC_PROFILE_ID] INTEGER NOT NULL
)

CREATE TABLE [mutation_event] (
   [MUTATION_EVENT_ID] INTEGER NOT NULL IDENTITY(1,1)
,  [ENTREZ_GENE_ID] INTEGER NOT NULL
,  [CHR] VARCHAR(5)
,  [START_POSITION] BIGINT
,  [END_POSITION] BIGINT
,  [REFERENCE_ALLELE] VARCHAR(400)
,  [TUMOR_SEQ_ALLELE] VARCHAR(400)
,  [PROTEIN_CHANGE] VARCHAR(255)
,  [MUTATION_TYPE] VARCHAR(255)
,  [FUNCTIONAL_IMPACT_SCORE] VARCHAR(50)
,  [FIS_VALUE] REAL
,  [LINK_XVAR] VARCHAR(500)
,  [LINK_PDB] VARCHAR(500)
,  [LINK_MSA] VARCHAR(500)
,  [NCBI_BUILD] VARCHAR(10)
,  [STRAND] VARCHAR(2)
,  [VARIANT_TYPE] VARCHAR(15)
,  [DB_SNP_RS] VARCHAR(25)
,  [DB_SNP_VAL_STATUS] VARCHAR(255)
,  [ONCOTATOR_DBSNP_RS] VARCHAR(255)
,  [ONCOTATOR_REFSEQ_MRNA_ID] VARCHAR(64)
,  [ONCOTATOR_CODON_CHANGE] VARCHAR(255)
,  [ONCOTATOR_UNIPROT_ENTRY_NAME] VARCHAR(64)
,  [ONCOTATOR_UNIPROT_ACCESSION] VARCHAR(64)
,  [ONCOTATOR_PROTEIN_POS_START] INTEGER
,  [ONCOTATOR_PROTEIN_POS_END] INTEGER
,  [CANONICAL_TRANSCRIPT] BIT
,  [KEYWORD] VARCHAR(50) DEFAULT NULL
)

CREATE TABLE [mutation] (
   [MUTATION_EVENT_ID] INTEGER NOT NULL
,  [GENETIC_PROFILE_ID] INTEGER NOT NULL
,  [SAMPLE_ID] INTEGER NOT NULL
,  [ENTREZ_GENE_ID] INTEGER NOT NULL
,  [CENTER] VARCHAR(100)
,  [SEQUENCER] VARCHAR(255)
,  [MUTATION_STATUS] VARCHAR(25)
,  [VALIDATION_STATUS] VARCHAR(25)
,  [TUMOR_SEQ_ALLELE1] VARCHAR(255)
,  [TUMOR_SEQ_ALLELE2] VARCHAR(255)
,  [MATCHED_NORM_SAMPLE_BARCODE] VARCHAR(255)
,  [MATCH_NORM_SEQ_ALLELE1] VARCHAR(255)
,  [MATCH_NORM_SEQ_ALLELE2] VARCHAR(255)
,  [TUMOR_VALIDATION_ALLELE1] VARCHAR(255)
,  [TUMOR_VALIDATION_ALLELE2] VARCHAR(255)
,  [MATCH_NORM_VALIDATION_ALLELE1] VARCHAR(255)
,  [MATCH_NORM_VALIDATION_ALLELE2] VARCHAR(255)
,  [VERIFICATION_STATUS] VARCHAR(10)
,  [SEQUENCING_PHASE] VARCHAR(100)
,  [SEQUENCE_SOURCE] VARCHAR(255) NOT NULL
,  [VALIDATION_METHOD] VARCHAR(255)
,  [SCORE] VARCHAR(100)
,  [BAM_FILE] VARCHAR(255)
,  [TUMOR_ALT_COUNT] INTEGER
,  [TUMOR_REF_COUNT] INTEGER
,  [NORMAL_ALT_COUNT] INTEGER
,  [NORMAL_REF_COUNT] INTEGER
,  [AMINO_ACID_CHANGE] VARCHAR(255)
)

CREATE TABLE [mutation_count] (
   [GENETIC_PROFILE_ID] INTEGER NOT NULL
,  [SAMPLE_ID] INTEGER NOT NULL
,  [MUTATION_COUNT] INTEGER NOT NULL
)

CREATE TABLE [clinical_patient] (
   [INTERNAL_ID] INTEGER NOT NULL
,  [ATTR_ID] VARCHAR(255) NOT NULL
,  [ATTR_VALUE] VARCHAR(255) NOT NULL
)

CREATE TABLE [clinical_sample] (
   [INTERNAL_ID] INTEGER NOT NULL
,  [ATTR_ID] VARCHAR(255) NOT NULL
,  [ATTR_VALUE] VARCHAR(255) NOT NULL
)

CREATE TABLE [clinical_attribute_meta] (
   [ATTR_ID] VARCHAR(255) NOT NULL
,  [DISPLAY_NAME] VARCHAR(255) NOT NULL
,  [DESCRIPTION] VARCHAR(2048) NOT NULL
,  [DATATYPE] VARCHAR(255) NOT NULL
,  [PATIENT_ATTRIBUTE] BIT NOT NULL
,  [PRIORITY] VARCHAR(255) NOT NULL
,  [CANCER_STUDY_ID] INTEGER NOT NULL
)

CREATE TABLE [interaction] (
   [GENE_A] BIGINT NOT NULL
,  [GENE_B] BIGINT NOT NULL
,  [INTERACTION_TYPE] VARCHAR(256) NOT NULL
,  [DATA_SOURCE] VARCHAR(256) NOT NULL
,  [EXPERIMENT_TYPES] VARCHAR(1024) NOT NULL
,  [PMIDS] VARCHAR(1024) NOT NULL
)

CREATE TABLE [mut_sig] (
   [CANCER_STUDY_ID] INTEGER NOT NULL
,  [ENTREZ_GENE_ID] INTEGER NOT NULL
,  [RANK] INTEGER NOT NULL
,  [NumBasesCovered] INTEGER NOT NULL
,  [NumMutations] INTEGER NOT NULL
,  [P_VALUE] REAL NOT NULL
,  [Q_VALUE] REAL NOT NULL
)

CREATE TABLE [protein_array_info] (
   [PROTEIN_ARRAY_ID] VARCHAR(50) NOT NULL
,  [TYPE] VARCHAR(50) NOT NULL
,  [GENE_SYMBOL] VARCHAR(50) NOT NULL
,  [TARGET_RESIDUE] VARCHAR(20) default NULL
)

CREATE TABLE [protein_array_target] (
   [PROTEIN_ARRAY_ID] VARCHAR(50) NOT NULL
,  [ENTREZ_GENE_ID] INTEGER NOT NULL
)

CREATE TABLE [protein_array_data] (
   [PROTEIN_ARRAY_ID] VARCHAR(50) NOT NULL
,  [CANCER_STUDY_ID] INTEGER NOT NULL
,  [SAMPLE_ID] INTEGER NOT NULL
,  [ABUNDANCE] FLOAT NOT NULL
)

CREATE TABLE [protein_array_cancer_study] (
   [PROTEIN_ARRAY_ID] VARCHAR(50) NOT NULL
,  [CANCER_STUDY_ID] INTEGER NOT NULL
)

CREATE TABLE [sanger_cancer_census] (
   [ENTREZ_GENE_ID] INTEGER NOT NULL
,  [CANCER_SOMATIC_MUT] TINYINT NOT NULL
,  [CANCER_GERMLINE_MUT] TINYINT NOT NULL
,  [TUMOR_TYPES_SOMATIC_MUT] TEXT NOT NULL
,  [TUMOR_TYPES_GERMLINE_MUT] TEXT NOT NULL
,  [CANCER_SYNDROME] TEXT NOT NULL
,  [TISSUE_TYPE] TEXT NOT NULL
,  [MUTATION_TYPE] TEXT NOT NULL
,  [TRANSLOCATION_PARTNER] TEXT NOT NULL
,  [OTHER_GERMLINE_MUT] TINYINT NOT NULL
,  [OTHER_DISEASE] TEXT NOT NULL
)

CREATE TABLE [gistic] (
   [GISTIC_ROI_ID] BIGINT NOT NULL IDENTITY(1,1)
,  [CANCER_STUDY_ID] INTEGER NOT NULL
,  [CHROMOSOME] INTEGER NOT NULL
,  [CYTOBAND] VARCHAR(255) NOT NULL
,  [WIDE_PEAK_START] INTEGER NOT NULL
,  [WIDE_PEAK_END] INTEGER NOT NULL
,  [Q_VALUE] FLOAT NOT NULL
,  [AMP] TINYINT NOT NULL
)

CREATE TABLE [gistic_to_gene] (
   [GISTIC_ROI_ID] BIGINT NOT NULL
,  [ENTREZ_GENE_ID] INTEGER NOT NULL
)

CREATE TABLE [text_cache] (
   [HASH_KEY] VARCHAR(32) NOT NULL
,  [TEXT] TEXT NOT NULL
,  [DATE_TIME_STAMP] DATETIME NOT NULL
)

CREATE TABLE [pfam_graphics] (
   [UNIPROT_ACC] VARCHAR(255) NOT NULL
,  [JSON_DATA] TEXT NOT NULL
)

CREATE TABLE [drug] (
   [DRUG_ID] CHAR(30) NOT NULL
,  [DRUG_RESOURCE] VARCHAR(255) NOT NULL
,  [DRUG_NAME] VARCHAR(255) NOT NULL
,  [DRUG_SYNONYMS] VARCHAR(4096) DEFAULT NULL
,  [DRUG_DESCRIPTION] VARCHAR(4096) DEFAULT NULL
,  [DRUG_XREF] VARCHAR(4096) DEFAULT NULL
,  [DRUG_ATC_CODE] VARCHAR(1024) DEFAULT NULL
,  [DRUG_APPROVED] INTEGER DEFAULT 0
,  [DRUG_CANCERDRUG] INTEGER DEFAULT 0
,  [DRUG_NUTRACEUTICAL] INTEGER DEFAULT 0
,  [DRUG_NUMOFTRIALS] INTEGER DEFAULT -1
)

CREATE TABLE [drug_interaction] (
   [DRUG] CHAR(30) NOT NULL
,  [TARGET] BIGINT NOT NULL
,  [INTERACTION_TYPE] CHAR(50) NOT NULL
,  [DATA_SOURCE] VARCHAR(256) NOT NULL
,  [EXPERIMENT_TYPES] VARCHAR(1024) DEFAULT NULL
,  [PMIDS] VARCHAR(1024) DEFAULT NULL
)

CREATE TABLE [cna_event] (
   [CNA_EVENT_ID] INTEGER NOT NULL IDENTITY(1,1)
,  [ENTREZ_GENE_ID] INTEGER NOT NULL
,  [ALTERATION] SMALLINT NOT NULL
)

CREATE TABLE [sample_cna_event] (
   [CNA_EVENT_ID] INTEGER NOT NULL
,  [SAMPLE_ID] INTEGER NOT NULL
,  [GENETIC_PROFILE_ID] INTEGER NOT NULL
)

CREATE TABLE [copy_number_seg] (
   [SEG_ID] INTEGER NOT NULL IDENTITY(1,1)
,  [CANCER_STUDY_ID] INTEGER NOT NULL
,  [SAMPLE_ID] INTEGER NOT NULL
,  [CHR] VARCHAR(5) NOT NULL
,  [START] INTEGER NOT NULL
,  [END] INTEGER NOT NULL
,  [NUM_PROBES] INTEGER NOT NULL
,  [SEGMENT_MEAN] FLOAT NOT NULL
)

CREATE TABLE [copy_number_seg_file] (
   [SEG_FILE_ID] INTEGER NOT NULL IDENTITY(1,1)
,  [CANCER_STUDY_ID] INTEGER NOT NULL
,  [REFERENCE_GENOME_ID] VARCHAR(10) NOT NULL
,  [DESCRIPTION] VARCHAR(255) NOT NULL
,  [FILENAME] VARCHAR(255) NOT NULL
)

CREATE TABLE [cosmic_mutation] (
   [COSMIC_MUTATION_ID] VARCHAR(30) NOT NULL
,  [CHR] VARCHAR(5)
,  [START_POSITION] BIGINT
,  [REFERENCE_ALLELE] VARCHAR(255)
,  [TUMOR_SEQ_ALLELE] VARCHAR(255)
,  [STRAND] VARCHAR(2)
,  [CODON_CHANGE] VARCHAR(255)
,  [ENTREZ_GENE_ID] INTEGER NOT NULL
,  [PROTEIN_CHANGE] VARCHAR(255) NOT NULL
,  [COUNT] INTEGER NOT NULL
,  [KEYWORD] VARCHAR(50) DEFAULT NULL
)

CREATE TABLE [pdb_uniprot_alignment] (
   [ALIGNMENT_ID] INTEGER NOT NULL
,  [PDB_ID] CHAR(4) NOT NULL
,  [CHAIN] CHAR(1) NOT NULL
,  [UNIPROT_ID] VARCHAR(50) NOT NULL
,  [PDB_FROM] VARCHAR(10) NOT NULL
,  [PDB_TO] VARCHAR(10) NOT NULL
,  [UNIPROT_FROM] INTEGER NOT NULL
,  [UNIPROT_TO] INTEGER NOT NULL
,  [EVALUE] REAL
,  [IDENTITY] REAL
,  [IDENTP] REAL
,  [UNIPROT_ALIGN] TEXT
,  [PDB_ALIGN] TEXT
,  [MIDLINE_ALIGN] TEXT
)

CREATE TABLE [pdb_uniprot_residue_mapping] (
   [ALIGNMENT_ID] INTEGER NOT NULL
,  [PDB_POSITION] INTEGER NOT NULL
,  [PDB_INSERTION_CODE] CHAR(1) DEFAULT NULL
,  [UNIPROT_POSITION] INTEGER NOT NULL
,  [MATCH] CHAR(1)
)

CREATE TABLE [clinical_event] (
   [CLINICAL_EVENT_ID] INTEGER NOT NULL IDENTITY(1,1)
,  [PATIENT_ID] INTEGER NOT NULL
,  [START_DATE] INTEGER NOT NULL
,  [STOP_DATE] INTEGER
,  [EVENT_TYPE] VARCHAR(20) NOT NULL
)

CREATE TABLE [clinical_event_data] (
   [CLINICAL_EVENT_ID] INTEGER NOT NULL
,  [KEY] VARCHAR(255) NOT NULL
,  [VALUE] VARCHAR(5000) NOT NULL
)

CREATE TABLE [info] (
   [DB_SCHEMA_VERSION] VARCHAR(24)
)





-- MS SQL key and index definitions ported from MySQL version at C:\workspaces\git\sciserver-cbioportal\core\src\main\resources\db\cgds_fixed4MSSQL.sql

ALTER TABLE [type_of_cancer] ADD CONSTRAINT pk_type_of_cancer PRIMARY KEY ([TYPE_OF_CANCER_ID])

ALTER TABLE [cancer_study] ADD CONSTRAINT pk_cancer_study PRIMARY KEY ([CANCER_STUDY_ID])


-- TODO DEFINE: FOREIGNKEY (`TYPE_OF_CANCER_ID`) REFERENCES `type_of_cancer` (`TYPE_OF_CANCER_ID`)
ALTER TABLE cancer_study ADD CONSTRAINT fk_cancer_study_TYPE_OF_CANCER_ID FOREIGN KEY(TYPE_OF_CANCER_ID) REFERENCES [type_of_cancer](TYPE_OF_CANCER_ID)

ALTER TABLE [users] ADD CONSTRAINT pk_users PRIMARY KEY ([EMAIL])

ALTER TABLE [patient] ADD CONSTRAINT pk_patient PRIMARY KEY ([INTERNAL_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE patient ADD CONSTRAINT fk_patient_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID)

ALTER TABLE [sample] ADD CONSTRAINT pk_sample PRIMARY KEY ([INTERNAL_ID])


-- TODO DEFINE: FOREIGNKEY (`PATIENT_ID`) REFERENCES `patient` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE sample ADD CONSTRAINT fk_sample_PATIENT_ID FOREIGN KEY(PATIENT_ID) REFERENCES [patient](INTERNAL_ID)


-- TODO DEFINE: FOREIGNKEY (`TYPE_OF_CANCER_ID`) REFERENCES `type_of_cancer` (`TYPE_OF_CANCER_ID`)
ALTER TABLE sample ADD CONSTRAINT fk_sample_TYPE_OF_CANCER_ID FOREIGN KEY(TYPE_OF_CANCER_ID) REFERENCES [type_of_cancer](TYPE_OF_CANCER_ID)

ALTER TABLE [sample_list] ADD CONSTRAINT pk_sample_list PRIMARY KEY ([LIST_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE sample_list ADD CONSTRAINT fk_sample_list_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID)

ALTER TABLE [sample_list_list] ADD CONSTRAINT pk_sample_list_list PRIMARY KEY ([LIST_ID],[SAMPLE_ID])


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE sample_list_list ADD CONSTRAINT fk_sample_list_list_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID)

ALTER TABLE [gene] ADD CONSTRAINT pk_gene PRIMARY KEY ([ENTREZ_GENE_ID])



 -- TODO DEFINE: SINGLEKEY `HUGO_GENE_SYMBOL` (`HUGO_GENE_SYMBOL`)
CREATE INDEX ix_gene_HUGO_GENE_SYMBOL ON gene([HUGO_GENE_SYMBOL])
ALTER TABLE [gene_alias] ADD CONSTRAINT pk_gene_alias PRIMARY KEY ([ENTREZ_GENE_ID],[GENE_ALIAS])


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE gene_alias ADD CONSTRAINT fk_gene_alias_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)

ALTER TABLE [uniprot_id_mapping] ADD CONSTRAINT pk_uniprot_id_mapping PRIMARY KEY ([ENTREZ_GENE_ID],[UNIPROT_ID])



 -- TODO DEFINE: SINGLEKEY (`UNIPROT_ID`)
CREATE INDEX ix_uniprot_id_mapping_UNIPROT_ID ON uniprot_id_mapping([UNIPROT_ID])


 -- TODO DEFINE: SINGLEKEY (`UNIPROT_ACC`)
CREATE INDEX ix_uniprot_id_mapping_UNIPROT_ACC ON uniprot_id_mapping([UNIPROT_ACC])

-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE uniprot_id_mapping ADD CONSTRAINT fk_uniprot_id_mapping_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)

ALTER TABLE [genetic_profile] ADD CONSTRAINT pk_genetic_profile PRIMARY KEY ([GENETIC_PROFILE_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE genetic_profile ADD CONSTRAINT fk_genetic_profile_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID)



 -- TODO DEFINE: SINGLEKEY `QUICK_LOOK_UP` (`ENTREZ_GENE_ID`)
CREATE INDEX ix_genetic_alteration_ENTREZ_GENE_ID ON genetic_alteration([ENTREZ_GENE_ID])


 -- TODO DEFINE: SINGLEKEY `QUICK_LOOK_UP2` (`ENTREZ_GENE_ID`,`GENETIC_PROFILE_ID`)
CREATE INDEX ix_genetic_alteration_ENTREZ_GENE_ID_GENETIC_PROFILE_ID ON genetic_alteration([ENTREZ_GENE_ID],[GENETIC_PROFILE_ID])

-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE genetic_alteration ADD CONSTRAINT fk_genetic_alteration_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)


-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE genetic_alteration ADD CONSTRAINT fk_genetic_alteration_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID)


-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE genetic_profile_samples ADD CONSTRAINT fk_genetic_profile_samples_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID)

ALTER TABLE [gene_panel] ADD CONSTRAINT pk_gene_panel PRIMARY KEY ([INTERNAL_ID])

ALTER TABLE [gene_panel_list] ADD CONSTRAINT pk_gene_panel_list PRIMARY KEY ([INTERNAL_ID],[GENE_ID])


-- TODO DEFINE: FOREIGNKEY (`INTERNAL_ID`) REFERENCES `gene_panel` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE gene_panel_list ADD CONSTRAINT fk_gene_panel_list_INTERNAL_ID FOREIGN KEY(INTERNAL_ID) REFERENCES [gene_panel](INTERNAL_ID)


-- TODO DEFINE: FOREIGNKEY (`GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`) ON DELETE CASCADE
ALTER TABLE gene_panel_list ADD CONSTRAINT fk_gene_panel_list_GENE_ID FOREIGN KEY(GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)



 CREATE INDEX ix_sample_profile_UQ_SAMPLE_ID_GENETIC_PROFILE_ID ON [sample_profile]([SAMPLE_ID],[GENETIC_PROFILE_ID])

 -- TODO DEFINE: SINGLEKEY (`SAMPLE_ID`)
CREATE INDEX ix_sample_profile_SAMPLE_ID ON sample_profile([SAMPLE_ID])

-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE sample_profile ADD CONSTRAINT fk_sample_profile_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID)


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE sample_profile ADD CONSTRAINT fk_sample_profile_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID)


-- TODO DEFINE: FOREIGNKEY (`PANEL_ID`) REFERENCES `gene_panel` (`INTERNAL_ID`) ON DELETE RESTRICT
ALTER TABLE sample_profile ADD CONSTRAINT fk_sample_profile_PANEL_ID FOREIGN KEY(PANEL_ID) REFERENCES [gene_panel](INTERNAL_ID)

ALTER TABLE [structural_variant] ADD CONSTRAINT pk_structural_variant PRIMARY KEY ([INTERNAL_ID])


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE structural_variant ADD CONSTRAINT fk_structural_variant_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID)


-- TODO DEFINE: FOREIGNKEY (`SITE1_ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`) ON DELETE CASCADE
ALTER TABLE structural_variant ADD CONSTRAINT fk_structural_variant_SITE1_ENTREZ_GENE_ID FOREIGN KEY(SITE1_ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)


-- TODO DEFINE: FOREIGNKEY (`SITE2_ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`) ON DELETE CASCADE
ALTER TABLE structural_variant ADD CONSTRAINT fk_structural_variant_SITE2_ENTREZ_GENE_ID FOREIGN KEY(SITE2_ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)


-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE structural_variant ADD CONSTRAINT fk_structural_variant_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID)

ALTER TABLE [mutation_event] ADD CONSTRAINT pk_mutation_event PRIMARY KEY ([MUTATION_EVENT_ID])



 -- TODO DEFINE: SINGLEKEY (`KEYWORD`)
CREATE INDEX ix_mutation_event_KEYWORD ON mutation_event([KEYWORD])

-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE mutation_event ADD CONSTRAINT fk_mutation_event_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)



 CREATE INDEX ix_mutation_UQ_MUTATION_EVENT_ID_GENETIC_PROFILE_ID_SAMPLE_ID ON [mutation]([MUTATION_EVENT_ID],[GENETIC_PROFILE_ID],[SAMPLE_ID])

 -- TODO DEFINE: SINGLEKEY (`GENETIC_PROFILE_ID`,`ENTREZ_GENE_ID`)
CREATE INDEX ix_mutation_GENETIC_PROFILE_ID_ENTREZ_GENE_ID ON mutation([GENETIC_PROFILE_ID],[ENTREZ_GENE_ID])


 -- TODO DEFINE: SINGLEKEY (`GENETIC_PROFILE_ID`,`SAMPLE_ID`)
CREATE INDEX ix_mutation_GENETIC_PROFILE_ID_SAMPLE_ID ON mutation([GENETIC_PROFILE_ID],[SAMPLE_ID])


 -- TODO DEFINE: SINGLEKEY (`GENETIC_PROFILE_ID`)
CREATE INDEX ix_mutation_GENETIC_PROFILE_ID ON mutation([GENETIC_PROFILE_ID])


 -- TODO DEFINE: SINGLEKEY (`ENTREZ_GENE_ID`)
CREATE INDEX ix_mutation_ENTREZ_GENE_ID ON mutation([ENTREZ_GENE_ID])


 -- TODO DEFINE: SINGLEKEY (`SAMPLE_ID`)
CREATE INDEX ix_mutation_SAMPLE_ID ON mutation([SAMPLE_ID])


 -- TODO DEFINE: SINGLEKEY (`MUTATION_EVENT_ID`)
CREATE INDEX ix_mutation_MUTATION_EVENT_ID ON mutation([MUTATION_EVENT_ID])

-- TODO DEFINE: FOREIGNKEY (`MUTATION_EVENT_ID`) REFERENCES `mutation_event` (`MUTATION_EVENT_ID`)
ALTER TABLE mutation ADD CONSTRAINT fk_mutation_MUTATION_EVENT_ID FOREIGN KEY(MUTATION_EVENT_ID) REFERENCES [mutation_event](MUTATION_EVENT_ID)


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE mutation ADD CONSTRAINT fk_mutation_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)


-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE mutation ADD CONSTRAINT fk_mutation_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID)


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE mutation ADD CONSTRAINT fk_mutation_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID)



 -- TODO DEFINE: SINGLEKEY (`GENETIC_PROFILE_ID`,`SAMPLE_ID`)
CREATE INDEX ix_mutation_count_GENETIC_PROFILE_ID_SAMPLE_ID ON mutation_count([GENETIC_PROFILE_ID],[SAMPLE_ID])

-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE mutation_count ADD CONSTRAINT fk_mutation_count_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID)


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE mutation_count ADD CONSTRAINT fk_mutation_count_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID)

ALTER TABLE [clinical_patient] ADD CONSTRAINT pk_clinical_patient PRIMARY KEY ([INTERNAL_ID],[ATTR_ID])


-- TODO DEFINE: FOREIGNKEY (`INTERNAL_ID`) REFERENCES `patient` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE clinical_patient ADD CONSTRAINT fk_clinical_patient_INTERNAL_ID FOREIGN KEY(INTERNAL_ID) REFERENCES [patient](INTERNAL_ID)

ALTER TABLE [clinical_sample] ADD CONSTRAINT pk_clinical_sample PRIMARY KEY ([INTERNAL_ID],[ATTR_ID])


-- TODO DEFINE: FOREIGNKEY (`INTERNAL_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE clinical_sample ADD CONSTRAINT fk_clinical_sample_INTERNAL_ID FOREIGN KEY(INTERNAL_ID) REFERENCES [sample](INTERNAL_ID)

ALTER TABLE [clinical_attribute_meta] ADD CONSTRAINT pk_clinical_attribute_meta PRIMARY KEY ([ATTR_ID],[CANCER_STUDY_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE clinical_attribute_meta ADD CONSTRAINT fk_clinical_attribute_meta_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID)

ALTER TABLE [mut_sig] ADD CONSTRAINT pk_mut_sig PRIMARY KEY ([CANCER_STUDY_ID],[ENTREZ_GENE_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE mut_sig ADD CONSTRAINT fk_mut_sig_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID)


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE mut_sig ADD CONSTRAINT fk_mut_sig_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)

ALTER TABLE [protein_array_info] ADD CONSTRAINT pk_protein_array_info PRIMARY KEY ([PROTEIN_ARRAY_ID])

ALTER TABLE [protein_array_target] ADD CONSTRAINT pk_protein_array_target PRIMARY KEY ([PROTEIN_ARRAY_ID],[ENTREZ_GENE_ID])


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE protein_array_target ADD CONSTRAINT fk_protein_array_target_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)


-- TODO DEFINE: FOREIGNKEY (`PROTEIN_ARRAY_ID`) REFERENCES `protein_array_info` (`PROTEIN_ARRAY_ID`)
ALTER TABLE protein_array_target ADD CONSTRAINT fk_protein_array_target_PROTEIN_ARRAY_ID FOREIGN KEY(PROTEIN_ARRAY_ID) REFERENCES [protein_array_info](PROTEIN_ARRAY_ID)

ALTER TABLE [protein_array_data] ADD CONSTRAINT pk_protein_array_data PRIMARY KEY ([PROTEIN_ARRAY_ID],[CANCER_STUDY_ID],[SAMPLE_ID])


-- TODO DEFINE: FOREIGNKEY (`PROTEIN_ARRAY_ID`) REFERENCES `protein_array_info` (`PROTEIN_ARRAY_ID`)
ALTER TABLE protein_array_data ADD CONSTRAINT fk_protein_array_data_PROTEIN_ARRAY_ID FOREIGN KEY(PROTEIN_ARRAY_ID) REFERENCES [protein_array_info](PROTEIN_ARRAY_ID)


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE protein_array_data ADD CONSTRAINT fk_protein_array_data_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID)


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE protein_array_data ADD CONSTRAINT fk_protein_array_data_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID)

ALTER TABLE [protein_array_cancer_study] ADD CONSTRAINT pk_protein_array_cancer_study PRIMARY KEY ([PROTEIN_ARRAY_ID],[CANCER_STUDY_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE protein_array_cancer_study ADD CONSTRAINT fk_protein_array_cancer_study_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID)


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE sanger_cancer_census ADD CONSTRAINT fk_sanger_cancer_census_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)

ALTER TABLE [gistic] ADD CONSTRAINT pk_gistic PRIMARY KEY ([GISTIC_ROI_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE gistic ADD CONSTRAINT fk_gistic_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID)

ALTER TABLE [gistic_to_gene] ADD CONSTRAINT pk_gistic_to_gene PRIMARY KEY ([GISTIC_ROI_ID],[ENTREZ_GENE_ID])


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE gistic_to_gene ADD CONSTRAINT fk_gistic_to_gene_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)


-- TODO DEFINE: FOREIGNKEY (`GISTIC_ROI_ID`) REFERENCES `gistic` (`GISTIC_ROI_ID`)
ALTER TABLE gistic_to_gene ADD CONSTRAINT fk_gistic_to_gene_GISTIC_ROI_ID FOREIGN KEY(GISTIC_ROI_ID) REFERENCES [gistic](GISTIC_ROI_ID)

ALTER TABLE [text_cache] ADD CONSTRAINT pk_text_cache PRIMARY KEY ([HASH_KEY])

ALTER TABLE [pfam_graphics] ADD CONSTRAINT pk_pfam_graphics PRIMARY KEY ([UNIPROT_ACC])

ALTER TABLE [drug] ADD CONSTRAINT pk_drug PRIMARY KEY ([DRUG_ID])



 -- TODO DEFINE: SINGLEKEY `DRUG_NAME` (`DRUG_NAME`)
CREATE INDEX ix_drug_DRUG_NAME ON drug([DRUG_NAME])

-- TODO DEFINE: FOREIGNKEY (`DRUG`) REFERENCES `drug` (`DRUG_ID`)
ALTER TABLE drug_interaction ADD CONSTRAINT fk_drug_interaction_DRUG FOREIGN KEY(DRUG) REFERENCES [drug](DRUG_ID)

ALTER TABLE [cna_event] ADD CONSTRAINT pk_cna_event PRIMARY KEY ([CNA_EVENT_ID])


-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE cna_event ADD CONSTRAINT fk_cna_event_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)

ALTER TABLE [sample_cna_event] ADD CONSTRAINT pk_sample_cna_event PRIMARY KEY ([CNA_EVENT_ID],[SAMPLE_ID],[GENETIC_PROFILE_ID])



 -- TODO DEFINE: SINGLEKEY (`GENETIC_PROFILE_ID`,`SAMPLE_ID`)
CREATE INDEX ix_sample_cna_event_GENETIC_PROFILE_ID_SAMPLE_ID ON sample_cna_event([GENETIC_PROFILE_ID],[SAMPLE_ID])

-- TODO DEFINE: FOREIGNKEY (`CNA_EVENT_ID`) REFERENCES `cna_event` (`CNA_EVENT_ID`)
ALTER TABLE sample_cna_event ADD CONSTRAINT fk_sample_cna_event_CNA_EVENT_ID FOREIGN KEY(CNA_EVENT_ID) REFERENCES [cna_event](CNA_EVENT_ID)


-- TODO DEFINE: FOREIGNKEY (`GENETIC_PROFILE_ID`) REFERENCES `genetic_profile` (`GENETIC_PROFILE_ID`) ON DELETE CASCADE
ALTER TABLE sample_cna_event ADD CONSTRAINT fk_sample_cna_event_GENETIC_PROFILE_ID FOREIGN KEY(GENETIC_PROFILE_ID) REFERENCES [genetic_profile](GENETIC_PROFILE_ID)


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE sample_cna_event ADD CONSTRAINT fk_sample_cna_event_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID)

ALTER TABLE [copy_number_seg] ADD CONSTRAINT pk_copy_number_seg PRIMARY KEY ([SEG_ID])



 -- TODO DEFINE: SINGLEKEY (`CANCER_STUDY_ID`,`SAMPLE_ID`)
CREATE INDEX ix_copy_number_seg_CANCER_STUDY_ID_SAMPLE_ID ON copy_number_seg([CANCER_STUDY_ID],[SAMPLE_ID])

-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE copy_number_seg ADD CONSTRAINT fk_copy_number_seg_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID)


-- TODO DEFINE: FOREIGNKEY (`SAMPLE_ID`) REFERENCES `sample` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE copy_number_seg ADD CONSTRAINT fk_copy_number_seg_SAMPLE_ID FOREIGN KEY(SAMPLE_ID) REFERENCES [sample](INTERNAL_ID)

ALTER TABLE [copy_number_seg_file] ADD CONSTRAINT pk_copy_number_seg_file PRIMARY KEY ([SEG_FILE_ID])


-- TODO DEFINE: FOREIGNKEY (`CANCER_STUDY_ID`) REFERENCES `cancer_study` (`CANCER_STUDY_ID`) ON DELETE CASCADE
ALTER TABLE copy_number_seg_file ADD CONSTRAINT fk_copy_number_seg_file_CANCER_STUDY_ID FOREIGN KEY(CANCER_STUDY_ID) REFERENCES [cancer_study](CANCER_STUDY_ID)

ALTER TABLE [cosmic_mutation] ADD CONSTRAINT pk_cosmic_mutation PRIMARY KEY ([COSMIC_MUTATION_ID])



 -- TODO DEFINE: SINGLEKEY (`KEYWORD`)
CREATE INDEX ix_cosmic_mutation_KEYWORD ON cosmic_mutation([KEYWORD])

-- TODO DEFINE: FOREIGNKEY (`ENTREZ_GENE_ID`) REFERENCES `gene` (`ENTREZ_GENE_ID`)
ALTER TABLE cosmic_mutation ADD CONSTRAINT fk_cosmic_mutation_ENTREZ_GENE_ID FOREIGN KEY(ENTREZ_GENE_ID) REFERENCES [gene](ENTREZ_GENE_ID)

ALTER TABLE [pdb_uniprot_alignment] ADD CONSTRAINT pk_pdb_uniprot_alignment PRIMARY KEY ([ALIGNMENT_ID])



 -- TODO DEFINE: SINGLEKEY(`UNIPROT_ID`)
CREATE INDEX ix_pdb_uniprot_alignment_UNIPROT_ID ON pdb_uniprot_alignment([UNIPROT_ID])


 -- TODO DEFINE: SINGLEKEY(`PDB_ID`, `CHAIN`)
CREATE INDEX ix_pdb_uniprot_alignment_PDB_ID_CHAIN ON pdb_uniprot_alignment([PDB_ID],[CHAIN])


 -- TODO DEFINE: SINGLEKEY(`ALIGNMENT_ID`, `UNIPROT_POSITION`)
CREATE INDEX ix_pdb_uniprot_residue_mapping_ALIGNMENT_ID_UNIPROT_POSITION ON pdb_uniprot_residue_mapping([ALIGNMENT_ID],[UNIPROT_POSITION])

-- TODO DEFINE: FOREIGNKEY(`ALIGNMENT_ID`) REFERENCES `pdb_uniprot_alignment` (`ALIGNMENT_ID`)
ALTER TABLE pdb_uniprot_residue_mapping ADD CONSTRAINT fk_pdb_uniprot_residue_mapping_ALIGNMENT_ID FOREIGN KEY(ALIGNMENT_ID) REFERENCES [pdb_uniprot_alignment](ALIGNMENT_ID)

ALTER TABLE [clinical_event] ADD CONSTRAINT pk_clinical_event PRIMARY KEY ([CLINICAL_EVENT_ID])



 -- TODO DEFINE: SINGLEKEY (`PATIENT_ID`, `EVENT_TYPE`)
CREATE INDEX ix_clinical_event_PATIENT_ID_EVENT_TYPE ON clinical_event([PATIENT_ID],[EVENT_TYPE])

-- TODO DEFINE: FOREIGNKEY (`PATIENT_ID`) REFERENCES `patient` (`INTERNAL_ID`) ON DELETE CASCADE
ALTER TABLE clinical_event ADD CONSTRAINT fk_clinical_event_PATIENT_ID FOREIGN KEY(PATIENT_ID) REFERENCES [patient](INTERNAL_ID)


-- TODO DEFINE: FOREIGNKEY (`CLINICAL_EVENT_ID`) REFERENCES `clinical_event` (`CLINICAL_EVENT_ID`) ON DELETE CASCADE
ALTER TABLE clinical_event_data ADD CONSTRAINT fk_clinical_event_data_CLINICAL_EVENT_ID FOREIGN KEY(CLINICAL_EVENT_ID) REFERENCES [clinical_event](CLINICAL_EVENT_ID)



